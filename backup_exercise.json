[{
 "exercise_id": "2",
 "date_time": "2023-05-18T04:13:32.066627",
 "default_code": "ZGVmIGZpenpfYnV6eihuKToKICAgICMgWW91ciBjb2RlIGhlcmUKICAgIHBhc3M=",
 "description": {
  "description": "<p>The <strong>FizzBuzz </strong>challenge is a classic programming task, often used in interviews to test basic programming and logic skills. The task is to write a function that takes an <strong>integer </strong>and returns a <em>list </em>from <strong>1</strong> to that <strong>number</strong>. However, there are a few twists:</p>\n<p>- For multiples of both <strong>3 and 5</strong>, it should output \"<em>FizzBuzz</em>\".<br>- For multiples of <strong>3 but not 5</strong>, it should output \"<em>Fizz</em>\".<br>- For multiples of <strong>5 but not 3</strong>, it should output \"<em>Buzz</em>\".<br>- For numbers which are neither multiples of <strong>3 nor 5</strong>, it should output the number <em>itself</em>.</p>",
  "examples": [
   {
    "Example 1": "<p dir=\"ltr\"><strong>Input</strong>: <code>n = 2</code></p>\n<p dir=\"ltr\"><strong>Output</strong>: <code>[\"1\",\"2\",\"Fizz\"]</code></p>"
   },
   {
    "Example 2": "<p dir=\"ltr\"><strong>Input</strong>: <code>n = 5</code></p>\n<p dir=\"ltr\"><strong>Output</strong>: <code>[1, 2, \"Fizz\", 4, \"Buzz\"]</code></p>"
   },
   {
    "Requirement": "<p>Use the modulo operator (<code>%</code>) to check if a number is a multiple of another number. For example, <code>n % 3 == 0</code> checks if <code>n</code> is a multiple of 3.</p>"
   }
  ],
  "title": "FizzBuzz"
 },
 "expected_elements": [
  {
   "hint": "Use the modulo operator (%) to check if a number is a multiple of another number. ",
   "name": "Mod",
   "occurences": [
   ]
  }
 ],
 "main_name": "fizz_buzz",
 "test_cases": [
  {
   "expected_result": "WzEsIDIsICJGaXp6Il0=",
   "input": "2",
   "threshold": 75,
   "type": "stdout"
  },
  {
   "expected_result": "WzEsIDIsICJGaXp6IiwgNCwgIkJ1enoiXQ==",
   "input": "5",
   "threshold": 75,
   "type": "stdout"
  },
  {
   "expected_result": "WzEsIDIsICJGaXp6IiwgNCwgIkJ1enoiLCAiRml6eiIsIDcsIDgsICJGaXp6IiwgIkJ1enoiLCAxMSwgIkZpenoiLCAxMywgMTQsICJGaXp6QnV6eiJd",
   "input": "15",
   "threshold": 75,
   "type": "result"
  }
 ]
},
{
 "exercise_id": "1",
 "date_time": "2023-03-19T12:30:45.000Z",
 "allowed_functions": [
  "List of functions"
 ],
 "default_code": "ZGVmIGRyYXdfYm94KCk6CiAgICAjIFdyaXRlIHlvdXIgY29kZSBoZXJlCiAgICBwcmludCgidGVzdCIpCgpkcmF3X2JveCgp",
 "description": {
  "description": "<p>Write and test a <code>draw_box()</code> function to display the following.</p>\n<pre>\n+------+\n-      -\n-      -\n-      -\n+------+\n</pre>\n<p>Use a loop to create the repeating three lines i.e. use a loop to write <code>\"-       -\"</code>\nthree times.</p>\n",
  "examples": [
   {
    "Sample code": "<pre>\ndef draw_box()\n    print(\"top of the box\")\n\ndraw_box()\n</pre>"
   },
   {
    "Output an element on screen": "<pre>\nprint(\"+---+\")\n</pre>"
   },
   {
    "For loop to print 3 times": "<pre>\nfor _ in range(3):\n    print(\"-   -\")\n</pre>"
   }
  ],
  "title": "Draw a Box"
 },
 "expected_algorithms": {},
 "expected_elements": [
  {
   "hint": "Use a for loop to draw the sides of the box.",
   "name": "For",
   "occurences": [
   ]
  }
 ],
 "expected_statement": {
  "For": [
  ]
 },
 "hints": [
  ""
 ],
 "main_name": "draw_box",
 "test_cases": [
  {
   "expected_result": "Ky0tLS0tLSsKLSAgICAgIC0KLSAgICAgIC0KLSAgICAgIC0KKy0tLS0tLSs=",
   "hidden": false,
   "threshold": 75,
   "type": "stdout"
  }
 ]
}]